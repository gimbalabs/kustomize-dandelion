---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-cardano-cardano-token-registry-api
spec:
  rules:
    - host: cardano-token-registry-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: cardano-token-registry
                port:
                  number: 3042
            path: /
            pathType: Prefix
  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - cardano-token-registry-api.mainnet.dandelion.link
    #secretName: local-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-cardano-explorer-api
spec:
  rules:
    - host: explorer-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: cardano-explorer-api
                port: 
                  number: 8101
            path: /
            pathType: Prefix
  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - explorer-api.mainnet.dandelion.link
    #secretName: local-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-cardano-submit-api
spec:
  rules:
    - host: submit-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: cardano-submit-api
                port: 
                  number: 8091
            path: /
            pathType: Prefix
  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - submit-api.mainnet.dandelion.link
    #secretName: local-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-cardano-graphql-api
spec:
  rules:
    - host: graphql-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: cardano-graphql
                port: 
                  number: 3100
            path: /
            pathType: Prefix

  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - graphql-api.mainnet.dandelion.link
    #secretName: local-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-chisel-api
spec:
  rules:
    - host: chisel-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: chisel-server
                port: 
                  number: 40000
            path: /
            pathType: Prefix

  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - chisel-api.mainnet.dandelion.link
    #secretName: local-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-ogmios-api
spec:
  rules:
    - host: ogmios-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: ogmios
                port: 
                  number: 1337
            path: /
            pathType: Prefix

  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - ogmios-api.mainnet.dandelion.link
    #secretName: local-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-postgrest-api
spec:
  rules:
    - host: postgrest-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: postgrest
                port: 
                  number: 3000
            path: /
            pathType: Prefix

  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - postgrest-api.mainnet.dandelion.link
    #secretName: local-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-koios-api
spec:
  rules:
    - host: koios-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: koios-api
                port: 
                  number: 3000
            path: /
            pathType: Prefix

  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - koios-api.mainnet.dandelion.link
    #secretName: dandelion.link-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-rosetta-api
spec:
  rules:
    - host: rosetta-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: cardano-rosetta
                port: 
                  number: 8080
            path: /
            pathType: Prefix

  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - rosetta-api.mainnet.dandelion.link
    #secretName: local-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-blockfrost-api
spec:
  rules:
    - host: blockfrost-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: blockfrost
                port:
                  number: 3000
            path: /
            pathType: Prefix

  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - blockfrost-api.mainnet.dandelion.link
    #secretName: local-tls

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-kupo-api
spec:
  rules:
    - host: kupo-api.mainnet.dandelion.link
      http:
        paths:
          - backend:
              service:
                name: kupo
                port:
                  number: 3000
            path: /
            pathType: Prefix

  # This section is only required if TLS is to be enabled for the Ingress
  tls:
  - hosts:
    - kupo-api.mainnet.dandelion.link
    #secretName: local-tls

---
